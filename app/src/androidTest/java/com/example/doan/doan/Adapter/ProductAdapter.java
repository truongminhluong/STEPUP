package com.example.doan.doan.Adapter;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.Base64;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.doan.Model.Product;
import com.example.doan.R;

import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;

public class ProductAdapter extends RecyclerView.Adapter<ProductAdapter.ProductViewHolder> {

    // Danh s√°ch s·∫£n ph·∫©m
    private List<Product> productList;
    // Interface callback cho s·ª± ki·ªán click v√†o s·∫£n ph·∫©m
    private OnProductClickListener listener;

    /**
     * Interface ƒë·ªÉ x·ª≠ l√Ω s·ª± ki·ªán click v√†o s·∫£n ph·∫©m
     */
    public interface OnProductClickListener {
        void onProductClick(Product product);
    }

    // Constructor nh·∫≠n danh s√°ch s·∫£n ph·∫©m v√† listener
    public ProductAdapter(List<Product> productList, OnProductClickListener listener) {
        this.productList = productList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public ProductViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        // Inflate layout cho t·ª´ng s·∫£n ph·∫©m (file item_product.xml)
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_product, parent, false);
        return new ProductViewHolder(view);
    }

    // Bind d·ªØ li·ªáu cho t·ª´ng s·∫£n ph·∫©m
    @Override
    public void onBindViewHolder(@NonNull ProductViewHolder holder, int position) {
        Product product = productList.get(position);
        holder.bind(product);
    }

    @Override
    public int getItemCount() {
        return productList.size();
    }

    // ViewHolder ch·ª©a c√°c view c·ªßa item s·∫£n ph·∫©m
    public class ProductViewHolder extends RecyclerView.ViewHolder {
        private ImageView imgProduct;
        private ImageButton btnAddToCart;
        private TextView txtProductName, txtProductPrice, txtBestSeller;

        public ProductViewHolder(@NonNull View itemView) {
            super(itemView);
            // L·∫•y c√°c view t·ª´ layout item_product.xml
            imgProduct = itemView.findViewById(R.id.imgProduct);
            txtBestSeller = itemView.findViewById(R.id.txtBestSeller);
            txtProductName = itemView.findViewById(R.id.txtProductName);
            txtProductPrice = itemView.findViewById(R.id.txtPrice);
            btnAddToCart = itemView.findViewById(R.id.btnAdd);
        }

        public void bind(Product product) {
            // G√°n d·ªØ li·ªáu cho t√™n, gi√° v√† h√¨nh ·∫£nh s·∫£n ph·∫©m
            Bitmap bitmap = decodeBase64ToBitmap(product.getImageUrl(), itemView.getContext()); // Truy·ªÅn Context v√†o ƒë√¢y
            imgProduct.setImageBitmap(bitmap);
            txtProductName.setText(product.getName());

            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            String formattedPrice = formatter.format(product.getPrice());
            txtProductPrice.setText(formattedPrice);


            // Hi·ªÉn th·ªã nh√£n "Best Seller" n·∫øu s·∫£n ph·∫©m ƒë∆∞·ª£c ƒë√°nh d·∫•u
//            if (product.isBestSeller()) {
//                txtBestSeller.setVisibility(View.VISIBLE);
//            } else {
//                txtBestSeller.setVisibility(View.GONE);
//            }

            // Thi·∫øt l·∫≠p s·ª± ki·ªán click cho to√†n b·ªô item ƒë·ªÉ chuy·ªÉn sang m√†n h√¨nh chi ti·∫øt
            itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if(listener != null) {
                        listener.onProductClick(product);
                    }
                }
            });

            // S·ª± ki·ªán click cho n√∫t "Add to Cart" (n·∫øu c·∫ßn)
            btnAddToCart.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Toast.makeText(v.getContext(), "Added " + product.getName() + " to cart", Toast.LENGTH_SHORT).show();
                    // TODO: X·ª≠ l√Ω th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
                }
            });
        }

        public Bitmap decodeBase64ToBitmap(String base64Str, Context context) {
            Log.d("Base64String", base64Str);

            // Ki·ªÉm tra chu·ªói Base64 h·ª£p l·ªá
            if (base64Str == null || base64Str.trim().isEmpty()) {
                Log.e("Base64Error", "Chu·ªói Base64 kh√¥ng h·ª£p l·ªá");
                return BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_nike); // Placeholder image
            }

            try {
                // üõ†Ô∏è ƒê√£ th√™m ƒëo·∫°n n√†y ƒë·ªÉ h·ªó tr·ª£ c√°c ƒë·ªãnh d·∫°ng kh√°c ngo√†i PNG
                String base64Image = base64Str.replaceFirst("^data:image/[^;]+;base64,", "");

                byte[] decodedBytes = Base64.decode(base64Image, Base64.DEFAULT);
                Bitmap bitmap = BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);

                if (bitmap == null) {
                    Log.e("Base64Error", "Kh√¥ng th·ªÉ gi·∫£i m√£ Base64 th√†nh Bitmap");
                    return BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_nike); // Placeholder image
                }

                return bitmap;
            } catch (IllegalArgumentException e) {
                Log.e("Base64Error", "L·ªói khi gi·∫£i m√£ Base64", e);
                return BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_nike); // Placeholder image
            } catch (Exception e) {
                Log.e("Base64Error", "L·ªói kh√¥ng x√°c ƒë·ªãnh", e);
                return BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_nike); // Placeholder image
            }
        }
    }
}
